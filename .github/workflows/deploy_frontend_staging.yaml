name: Deploy React Frontend Staging



on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'    

permissions:
  id-token: write # This is required for requesting the JWT


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v2

      # Install dependencies
      - name: Install dependencies
        run: npm install
        working-directory: ./frontend
      # Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::273711029273:role/DeployFrontEndTestOIDC
          role-session-name: DeployFrontendSession
          aws-region: eu-central-1
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.5
          terraform_wrapper: false
      - name: Check prettier
        run: npm run prettier:check
        working-directory: ./frontend
      - name: Check unit tests
        run: npm run test --ci --lastCommit --maxWorkers=50%
        env:
          CI: true
        working-directory: ./frontend
      - name: Get outputs
        uses: dflook/terraform-output@v1
        id: tf-outputs
        with:
          path: ./terraform/staging/services/backend
      - name: update the settings file with back-end base_url
        run: |
          echo "export default {" > ./frontend/src/config/settings.ts
          echo "  baseApiUrl: '${{ steps.tf-outputs.outputs.base_url }}staging/api/'," >> ./frontend/src/config/settings.ts
          echo "};" >> ./frontend/src/config/settings.ts
      # Build the React application
      - name: Build the React application
        run: npm run build
        working-directory: ./frontend




      # Sync the built React application with the S3 bucket
      - name: Sync with S3 bucket
        run: aws s3 sync build/ s3://reactlambda-frontend-staging-www --delete
        working-directory: ./frontend

